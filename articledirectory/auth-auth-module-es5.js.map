{"version":3,"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/reverse-auth.guard.ts","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html"],"names":["routes","path","canActivate","component","children","redirectTo","pathMatch","AuthRoutingModule","forChild","imports","exports","AuthComponent","selector","templateUrl","styleUrls","AuthModule","declarations","LoginComponent","authService","router","isLoading","error","navigate","form","username","value","password","login","subscribe","resData","valid","reset","ReverseAuthGuard","route","state","user","JSON","parse","sessionStorage","getItem","providedIn","SignupComponent","signup"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReverseAuthGuard } from './reverse-auth.guard';\r\nimport { AuthComponent } from './auth.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\nconst routes: Routes=[\r\n{path: '',canActivate:[ReverseAuthGuard], component: AuthComponent,children:[\r\n    {path:'', redirectTo:'login',pathMatch: 'full'},\r\n    {path:'login',component:LoginComponent},\r\n    {path:'signup',component:SignupComponent}\r\n    ]} \r\n]\r\n\r\n@NgModule({\r\n    imports: [ RouterModule.forChild(routes) ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {\r\n\r\n}","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { User } from './user.model';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n \n  ngOnInit() {\n\n }\n \n}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { AuthComponent } from './auth.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\ndeclarations: [\r\n    AuthComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n],\r\nimports: [\r\n    FormsModule,\r\n    AuthRoutingModule,\r\n    SharedModule\r\n]\r\n})\r\nexport class AuthModule {\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  isLoading=false;\n  error:string=null;\n\n  constructor(private authService:AuthService,private router:Router) {\n   \n    }\n  ngOnInit() {\n\n  }\n\n  onClose() {\n      this.error=null;\n  }\n\n  onSwitchMode() {\n    this.router.navigate(['/auth','signup']);\n  }\n\n  onSubmit(form:NgForm) {\n\n      const username=form.value.username;\n      const password=form.value.password;\n\n      this.isLoading=true;\n\n          this.authService.login(username,password).subscribe(resData=>{\n          if(!resData.valid) {\n          this.error=\"An error Occured! Invalid Username or Password\";\n          }\n          else{\n          this.error=null;\n          this.router.navigate(['/articles']);\n          }\n          this.isLoading=false;\n          })\n\n      \n      form.reset();\n  }\n\n}\n","<div class=\"container box\">\n    <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-xs-6 col-xs-offset-3\">\n        <app-alert [message]=\"error\" *ngIf=\"error\" (close)=\"onClose()\"></app-alert>\n        <div *ngIf=\"isLoading\" style=\"text-align: center;\">\n            <app-loading-spinner></app-loading-spinner>\n        </div>\n      <div class=\"text-center\" *ngIf=\"!isLoading\">\n           <div class=\"header-title\">\n              <h1>\n                LOGIN\n              </h1>\n              <h4>\n                 Login or register from here to gain access.\n              </h4>\n           </div>\n        </div>\n      </div>\n    </div>\n    \n   <div class=\"row\">\n    <div class=\"col-xs-4 col-xs-offset-4 text-center\">\n        <div class=\"form\">\n            <form  #authform=\"ngForm\" (ngSubmit)=\"onSubmit(authform)\" *ngIf=\"!isLoading\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"username\" class=\"form-control\" placeholder=\"Username\"\n                    ngModel name=\"username\" required #username=\"ngModel\">\n                    <span *ngIf=\"!username.valid && username.touched\" class=\"help-block\">This field is required!</span>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"password\" placeholder=\"Password\" class=\"form-control\"\n                    ngModel name=\"password\" \n                    required pattern=\"((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{6,50})\" #password=\"ngModel\">\n                    <span *ngIf=\"!password.valid && password.touched\" class=\"help-block\">\n                        Password requires at least 1 lower case character, 1 upper case character, 1 number, \n                        1 special character and must be at least 6 characters and at most 50\n                    </span>              \n                </div>\n                <div class=\"text-center\">\n                    <button type=\"submit\" class=\" btn btn-block send-button\"\n                    [disabled]=\"!authform.valid\">LOGIN</button>\n                </div>\n                <br>\n                <div class=\"text-center\">\n                    <button type=\"button\" class=\" btn btn-block switch-button\"\n                    (click)=\"onSwitchMode()\">SWITCH TO SIGNUP</button>\n                </div>\n                <br />\n            </form>\n        </div>\n   </div>\n  </div>\n</div>\n</div>","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from './user.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ReverseAuthGuard implements CanActivate {\r\n    isAuthenticated: boolean;\r\n\r\n    constructor(private router:Router) {\r\n\r\n    }\r\n\r\n    canActivate(route:ActivatedRouteSnapshot,state:RouterStateSnapshot)\r\n    :Observable<boolean> | Promise<boolean> | boolean {\r\n        const user:User= JSON.parse(sessionStorage.getItem('userData'));\r\n     \r\n        if(user) {\r\n            this.router.navigate(['/articles']);\r\n            return false;\r\n        }else{\r\n        return true;\r\n        }\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  isLoading=false;\n  error:string=null;\n\n  constructor(private authService:AuthService,private router:Router) {\n\n    }\n  ngOnInit() {\n\n  }\n\n  onClose() {\n      this.error=null;\n  }\n\n  onSwitchMode() {\n    this.router.navigate(['/auth']);\n  }\n\n  onSubmit(form:NgForm) {\n    \n      const username=form.value.username;\n      const password=form.value.password;\n\n      this.isLoading=true;\n             \n      this.authService.signup(username,password).subscribe(resData=>{\n          if(!resData.valid)\n          this.error=\"An error occured! User Already Exists\";\n          else{\n          this.error=null;\n          this.router.navigate(['/articles']);\n      }\n          this.isLoading=false;\n      });\n\n      form.reset();\n  }\n}\n","<div class=\"container box\">\n    <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-xs-6 col-xs-offset-3\">\n        <app-alert [message]=\"error\" *ngIf=\"error\" (close)=\"onClose()\"></app-alert>\n        <div *ngIf=\"isLoading\" style=\"text-align: center;\">\n            <app-loading-spinner></app-loading-spinner>\n        </div>\n      <div class=\"text-center\" *ngIf=\"!isLoading\">\n           <div class=\"header-title\">\n              <h1>\n                SIGNUP\n              </h1>\n              <h4>\n                 Login or register from here to gain access.\n              </h4>\n           </div>\n        </div>\n      </div>\n    </div>\n    \n   <div class=\"row\">\n    <div class=\"col-xs-4 col-xs-offset-4 text-center\">\n        <div class=\"form\">\n            <form  #authform=\"ngForm\" (ngSubmit)=\"onSubmit(authform)\" *ngIf=\"!isLoading\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"username\" class=\"form-control\" placeholder=\"Username\"\n                    ngModel name=\"username\" required #username=\"ngModel\">\n                    <span *ngIf=\"!username.valid && username.touched\" class=\"help-block\">This field is required!</span>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"password\" placeholder=\"Password\" class=\"form-control\"\n                    ngModel name=\"password\" \n                    required pattern=\"((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{6,50})\" #password=\"ngModel\">\n                    <span *ngIf=\"!password.valid && password.touched\" class=\"help-block\">\n                        Password requires at least 1 lower case character, 1 upper case character, 1 number, \n                        1 special character and must be at least 6 characters and at most 50\n                    </span>              \n                </div>\n                <div class=\"text-center\">\n                    <button type=\"submit\" class=\" btn btn-block send-button\"\n                    [disabled]=\"!authform.valid\">SIGNUP</button>\n                </div>\n                <br>\n                <div class=\"text-center\">\n                    <button type=\"button\" class=\" btn btn-block switch-button\"\n                    (click)=\"onSwitchMode()\">SWITCH TO LOGIN</button>\n                </div>\n                <br />    \n                <h5 class=\"small mt-3\" style=\"margin-bottom: 100px;\">\n                    By signing up, you are indicating that you have read and agreed to the \n                    <a style=\"cursor: pointer;text-decoration: none;\" >Terms of Use</a> and \n                    <a style=\"cursor: pointer;text-decoration: none\" >Privacy Policy</a>.\n                </h5>\n            </form>\n        </div>\n   </div>\n  </div>\n</div>\n</div>"]}