{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/reverse-auth.guard.ts","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReverseAuthGuard } from './reverse-auth.guard';\r\nimport { AuthComponent } from './auth.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\nconst routes: Routes=[\r\n{path: '',canActivate:[ReverseAuthGuard], component: AuthComponent,children:[\r\n    {path:'', redirectTo:'login',pathMatch: 'full'},\r\n    {path:'login',component:LoginComponent},\r\n    {path:'signup',component:SignupComponent}\r\n    ]} \r\n]\r\n\r\n@NgModule({\r\n    imports: [ RouterModule.forChild(routes) ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {\r\n\r\n}","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { User } from './user.model';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n \n  ngOnInit() {\n\n }\n \n}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { AuthComponent } from './auth.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\ndeclarations: [\r\n    AuthComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n],\r\nimports: [\r\n    FormsModule,\r\n    AuthRoutingModule,\r\n    SharedModule\r\n]\r\n})\r\nexport class AuthModule {\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  isLoading=false;\n  error:string=null;\n\n  constructor(private authService:AuthService,private router:Router) {\n   \n    }\n  ngOnInit() {\n\n  }\n\n  onClose() {\n      this.error=null;\n  }\n\n  onSwitchMode() {\n    this.router.navigate(['/auth','signup']);\n  }\n\n  onSubmit(form:NgForm) {\n\n      const username=form.value.username;\n      const password=form.value.password;\n\n      this.isLoading=true;\n\n          this.authService.login(username,password).subscribe(resData=>{\n          if(!resData.valid) {\n          this.error=\"An error Occured! Invalid Username or Password\";\n          }\n          else{\n          this.error=null;\n          this.router.navigate(['/articles']);\n          }\n          this.isLoading=false;\n          })\n\n      \n      form.reset();\n  }\n\n}\n","<div class=\"container box\">\n    <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-xs-6 col-xs-offset-3\">\n        <app-alert [message]=\"error\" *ngIf=\"error\" (close)=\"onClose()\"></app-alert>\n        <div *ngIf=\"isLoading\" style=\"text-align: center;\">\n            <app-loading-spinner></app-loading-spinner>\n        </div>\n      <div class=\"text-center\" *ngIf=\"!isLoading\">\n           <div class=\"header-title\">\n              <h1>\n                LOGIN\n              </h1>\n              <h4>\n                 Login or register from here to gain access.\n              </h4>\n           </div>\n        </div>\n      </div>\n    </div>\n    \n   <div class=\"row\">\n    <div class=\"col-xs-4 col-xs-offset-4 text-center\">\n        <div class=\"form\">\n            <form  #authform=\"ngForm\" (ngSubmit)=\"onSubmit(authform)\" *ngIf=\"!isLoading\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"username\" class=\"form-control\" placeholder=\"Username\"\n                    ngModel name=\"username\" required #username=\"ngModel\">\n                    <span *ngIf=\"!username.valid && username.touched\" class=\"help-block\">This field is required!</span>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"password\" placeholder=\"Password\" class=\"form-control\"\n                    ngModel name=\"password\" \n                    required pattern=\"((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{6,50})\" #password=\"ngModel\">\n                    <span *ngIf=\"!password.valid && password.touched\" class=\"help-block\">\n                        Password requires at least 1 lower case character, 1 upper case character, 1 number, \n                        1 special character and must be at least 6 characters and at most 50\n                    </span>              \n                </div>\n                <div class=\"text-center\">\n                    <button type=\"submit\" class=\" btn btn-block send-button\"\n                    [disabled]=\"!authform.valid\">LOGIN</button>\n                </div>\n                <br>\n                <div class=\"text-center\">\n                    <button type=\"button\" class=\" btn btn-block switch-button\"\n                    (click)=\"onSwitchMode()\">SWITCH TO SIGNUP</button>\n                </div>\n                <br />\n            </form>\n        </div>\n   </div>\n  </div>\n</div>\n</div>","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from './user.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ReverseAuthGuard implements CanActivate {\r\n    isAuthenticated: boolean;\r\n\r\n    constructor(private router:Router) {\r\n\r\n    }\r\n\r\n    canActivate(route:ActivatedRouteSnapshot,state:RouterStateSnapshot)\r\n    :Observable<boolean> | Promise<boolean> | boolean {\r\n        const user:User= JSON.parse(sessionStorage.getItem('userData'));\r\n     \r\n        if(user) {\r\n            this.router.navigate(['/articles']);\r\n            return false;\r\n        }else{\r\n        return true;\r\n        }\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  isLoading=false;\n  error:string=null;\n\n  constructor(private authService:AuthService,private router:Router) {\n\n    }\n  ngOnInit() {\n\n  }\n\n  onClose() {\n      this.error=null;\n  }\n\n  onSwitchMode() {\n    this.router.navigate(['/auth']);\n  }\n\n  onSubmit(form:NgForm) {\n    \n      const username=form.value.username;\n      const password=form.value.password;\n\n      this.isLoading=true;\n             \n      this.authService.signup(username,password).subscribe(resData=>{\n          if(!resData.valid)\n          this.error=\"An error occured! User Already Exists\";\n          else{\n          this.error=null;\n          this.router.navigate(['/articles']);\n      }\n          this.isLoading=false;\n      });\n\n      form.reset();\n  }\n}\n","<div class=\"container box\">\n    <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-xs-6 col-xs-offset-3\">\n        <app-alert [message]=\"error\" *ngIf=\"error\" (close)=\"onClose()\"></app-alert>\n        <div *ngIf=\"isLoading\" style=\"text-align: center;\">\n            <app-loading-spinner></app-loading-spinner>\n        </div>\n      <div class=\"text-center\" *ngIf=\"!isLoading\">\n           <div class=\"header-title\">\n              <h1>\n                SIGNUP\n              </h1>\n              <h4>\n                 Login or register from here to gain access.\n              </h4>\n           </div>\n        </div>\n      </div>\n    </div>\n    \n   <div class=\"row\">\n    <div class=\"col-xs-4 col-xs-offset-4 text-center\">\n        <div class=\"form\">\n            <form  #authform=\"ngForm\" (ngSubmit)=\"onSubmit(authform)\" *ngIf=\"!isLoading\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"username\" class=\"form-control\" placeholder=\"Username\"\n                    ngModel name=\"username\" required #username=\"ngModel\">\n                    <span *ngIf=\"!username.valid && username.touched\" class=\"help-block\">This field is required!</span>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"password\" placeholder=\"Password\" class=\"form-control\"\n                    ngModel name=\"password\" \n                    required pattern=\"((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{6,50})\" #password=\"ngModel\">\n                    <span *ngIf=\"!password.valid && password.touched\" class=\"help-block\">\n                        Password requires at least 1 lower case character, 1 upper case character, 1 number, \n                        1 special character and must be at least 6 characters and at most 50\n                    </span>              \n                </div>\n                <div class=\"text-center\">\n                    <button type=\"submit\" class=\" btn btn-block send-button\"\n                    [disabled]=\"!authform.valid\">SIGNUP</button>\n                </div>\n                <br>\n                <div class=\"text-center\">\n                    <button type=\"button\" class=\" btn btn-block switch-button\"\n                    (click)=\"onSwitchMode()\">SWITCH TO LOGIN</button>\n                </div>\n                <br />    \n                <h5 class=\"small mt-3\" style=\"margin-bottom: 100px;\">\n                    By signing up, you are indicating that you have read and agreed to the \n                    <a style=\"cursor: pointer;text-decoration: none;\" >Terms of Use</a> and \n                    <a style=\"cursor: pointer;text-decoration: none\" >Privacy Policy</a>.\n                </h5>\n            </form>\n        </div>\n   </div>\n  </div>\n</div>\n</div>"],"sourceRoot":"webpack:///"}